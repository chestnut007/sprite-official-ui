<!--
样式：box公共样式;
sliderbar-color：前面线条颜色;
sliderbar-after-color:后部分线条颜色；
button-background-color:触摸按钮背景颜色
button-border-color:触摸按钮边框颜色
button-height: 触摸按钮高度（设置后宽度同时生效）


属性：

x_progress:当前进度和总进度的百分比数值0-100 (可通过js动态修改)


方法：无
事件：change：监听触摸时的实时进度值，参数：param1
-->
<page>
	<module>
		<![CDATA[
    
    ]]>
	</module>
	<script>
		<![CDATA[
    var document = require("Document");
		var window = require("Window");
		var console = require("Console");
		var screenWidth = window.getScreenWidth();
		var ui = require("UI");
		var time = require("Time");

		var Sliderbar = function () {
			this.sliderbarColor = "#549FF7";
			this.sliderbarAfterColor = "#f5f5f5";
			this.buttonBackgroundColor = "#fcfcfc";
			this.buttonBorderColor = "#d9d9d9";

			this.height = 30;
			this.width = 0;


			this.x_max = 0;
			this.slider_box_w = 0;
			this.slider_box = null;
			this.before_x = null;
			this.after_x = null;
			this.sliderbox_btn = null;
			this.sliderbox_image = null;
			this.x_progress = 0;
			this.tag = false;//用于表示是内部调用setAttr,如果是true标示内部调用


		};

		module.exports = Sliderbar;

		Sliderbar.prototype = {

			created: function () {
				this.slider_box = this.getElement("slider_box");
				this.before_x = this.getElement("before_x");
				this.after_x = this.getElement("after_x");
				
				this.sliderbox_btn = this.getElement("sliderbox_btn");


				var copythis = this;
				this.sliderbox_btn.on("touchMove", function (e, param) {
					//console.log(copythis.x_max);
					var json = this.getFrame();
					json.x += param.distanceX;
					if (json.x < 0) {
						json.x = 0;
					}
					else if (json.x > copythis.x_max) {
						json.x = copythis.x_max;
					}

					this.setFrame(json);

					var p = ((json.x / copythis.x_max) * 100).toFixed(2);

					//copythis.setProgress(p);

					copythis.setAttr("x_progress", p);
				});

				//由于页面没有加载完，得不到frame，这里用定时器
				time.setTimeout(function () {
					copythis.slider_box_w = copythis.slider_box.getFrame().width;
					copythis.init();


				}, 100);


			},
			init: function () {

				this.setStyle("button-height", this.getStyle("button-height"));

				this.setStyle("width", this.getStyle("width"));

				this.setStyle("sliderbar-color", this.getStyle("sliderbar-color"));
				this.setStyle("sliderbar-after-color", this.getStyle("sliderbar-after-color"));
				this.setStyle("button-background-color", this.getStyle("button-background-color"));
				this.setStyle("button-border-color", this.getStyle("button-border-color"));
				document.refresh();

				this.setAttr("x_progress", this.getAttr("x_progress"));

				


			},
			//属性变更回调函数
			attrChanged: function (attrName, attrValue) {

				// console.log(attrName+";"+attrValue);
				if (attrName == "x_progress") {
					if (attrValue > 100) {
						attrValue = 100;
					}

					this.x_progress = Number(attrValue).toFixed(2);

					this.setProgress(Number(attrValue).toFixed(2), "true");
				}



			},
			//样式变更回调函数
			styleChanged: function (styleName, styleValue) {

				if (styleName == "sliderbar-color") {
					if (styleValue != null) {

						this.sliderbarColor = styleValue;
					}
					this.before_x.setStyle("background-color", this.sliderbarColor);

				}


				if (styleName == "sliderbar-after-color") {
					if (styleValue != null) {

						this.sliderbarAfterColor = styleValue;
					}
					this.after_x.setStyle("background-color", this.sliderbarAfterColor);

				}


				if (styleName == "button-background-color") {
					if (styleValue != null) {

						this.buttonBackgroundColor = styleValue;
					}
					this.sliderbox_btn.setStyle("background-color", this.buttonBackgroundColor);

				}


				if (styleName == "button-border-color") {
					if (styleValue != null) {

						this.buttonBorderColor = styleValue;
					}
					this.sliderbox_btn.setStyle("border-color", this.buttonBorderColor);

				}

				if (styleName == "button-height") {
					if (styleValue != null) {

						this.buttonHeight = styleValue;
					}
				
					this.slider_box.setStyle("height", this.buttonHeight);
					this.sliderbox_btn.setStyle("height", this.buttonHeight);
					this.sliderbox_btn.setStyle("width", this.buttonHeight);
					this.sliderbox_btn.setStyle("border-radius", this.buttonHeight / 2);
				}

				if (styleName == "width") {


					if (styleValue != null) {


						this.width = this.slider_box.getFrame().width;
					}
					else {

						this.width = this.slider_box.getFrame().width;
					}
					// this.slider_box.setStyle("width",this.width);
					this.x_max = this.width - this.sliderbox_btn.getStyle("width");

				}

			},
			setProgress: function (x, tag) {

				var x_w = ((x / 100) * this.x_max).toFixed(1);
				
				//this.before_x.setStyle("width", x_w);
				//this.after_x.setStyle("width", this.slider_box_w - x_w);
				this.sliderbox_btn.setStyle("left", x_w);

				//setFrame 可以修改style中的width和height, 刷新不会重置，只有x,y会重置对应样式的left,top
				var before_x_json = this.before_x.getFrame();
                before_x_json.width = x_w;
				this.before_x.setFrame(before_x_json);
				

				var after_x_json = this.after_x.getFrame();
				after_x_json.width = this.slider_box_w - x_w;
				after_x_json.x=  x_w;
				this.after_x.setFrame(after_x_json);

				var sliderbox_btn_json = this.sliderbox_btn.getFrame();
				sliderbox_btn_json.x = x_w;
				this.sliderbox_btn.setFrame(sliderbox_btn_json);
			
				var params = new Array();
				params.push(x);
				this.fire("change", params);
				if (tag == "true") {
					//document.refresh();
				}

			},
			orientationChanged: function (orientation, screenWidth, screenHeight) {
				document.refresh();
			//	console.log(this.slider_box.getFrame().width);

				this.x_max = this.slider_box.getFrame().width - this.sliderbox_btn.getStyle("width");

				var x = Number(this.x_progress).toFixed(2);
				var x_w = ((x / 100) * this.x_max).toFixed(1);
				//console.log("x_w:"+x_w);
				this.before_x.setStyle("width", x_w);
				this.after_x.setStyle("width", this.slider_box_w - x_w);
				this.sliderbox_btn.setStyle("left", x_w);

				document.refresh();

			}
		}
    ]]>
	</script>
	<style>
		@import url("sliderbar.color.css");
		@import url("sliderbar.layout.css");
	</style>
	<ui>
		<box id="slider_box" class="sliderbar" x_jindu="50">
			<box style="height:2;flex:0;border-radius:2" id="before_x"></box>
			<box style="background-color:#909090;height:2;flex:1;border-radius:1" id="after_x"></box>
			<box id="sliderbox_btn" class="sliderbox_btn">

			</box>
		</box>
	</ui>
</page>